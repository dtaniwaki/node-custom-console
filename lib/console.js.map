{"version":3,"sources":["console.coffee"],"names":[],"mappings":"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","file":"console.js","sourceRoot":"/src","sourcesContent":["assert = require 'assert'\n\nclass CustomConsole\n  @getDebugLevel = (s) ->\n    return 0 unless s\n    switch s.toLowerCase()\n      when 'log' then 1\n      when 'info' then 2\n      when 'warn' then 3\n      when 'error' then 4\n      else 0\n\n  constructor: (tag, options) ->\n    assert tag, 'tag is required'\n\n    @console = options.console || require 'console'\n    @tag = tag\n\n    @init()\n\n  init: ->\n    debug = process.env.NODE_DEBUG || ''\n    match = debug.match new RegExp(\"\\\\*(\\\\:(.+))?|\\\\b#{@tag}(\\\\:(.+))?\\\\b\")\n    @enabled = !!match\n    match ||= []\n    @level = CustomConsole.getDebugLevel(match[2] || match[4])\n\n  prefix: (tag, severity) ->\n    time = (new Date()).toISOString()\n    \"#{time} [#{severity}] #{process.pid} #{tag}:\"\n\n  postfix: (tag, severity) ->\n    ''\n\n  template = (severity) ->\n    (args...) ->\n      _args = []\n\n      prefix = @prefix(@tag, severity)\n      _args.push prefix if prefix\n\n      _args = _args.concat args\n\n      postfix = @postfix(@tag, severity)\n      _args.push postfix if postfix\n\n      @console[severity] _args... if @enabled && CustomConsole.getDebugLevel(severity) >= @level\n\n  for name in ['log', 'info', 'warn', 'error']\n    @::[name] = template(name)\n \n  delegate = (name) ->\n    (args...) ->\n      @console[name] args...\n\n  for name in ['trace', 'time', 'timeEnd', 'assert', 'dir']\n    @::[name] = delegate(name)\n\nmodule.exports = (tag, options) ->\n  new CustomConsole(tag, options)\n"]}