{"version":3,"sources":["console.coffee"],"names":[],"mappings":"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","file":"console.js","sourceRoot":"/src","sourcesContent":["assert = require 'assert'\n\nclass CustomConsole\n  @getDebugLevel = (s) ->\n    return 0 unless s\n    switch s.toLowerCase()\n      when 'log' then 1\n      when 'info' then 2\n      when 'warn' then 3\n      when 'error' then 4\n      else 0\n\n  constructor: (tag, options) ->\n    assert tag, 'tag is required'\n\n    @console = options.console || require 'console'\n    @tag = tag\n\n    @init()\n\n    @formatter = options.formatter if options.formatter\n\n  init: ->\n    debug = process.env.NODE_DEBUG || ''\n    match = debug.match new RegExp(\"\\\\*(\\\\:(.+))?|\\\\b#{@tag}(\\\\:(.+))?\\\\b\")\n    @enabled = !!match\n    match ||= []\n    @level = CustomConsole.getDebugLevel(match[2] || match[4])\n\n  formatter: (args...) ->\n    time = (new Date()).toISOString()\n    [\"#{time} [#{@severity}] #{process.pid} #{@tag}:\"].concat args...\n\n  template = (severity) ->\n    (args...) ->\n      return unless @enabled && CustomConsole.getDebugLevel(severity) >= @level\n      _args = do (@tag, @formatter) ->\n        @severity = severity\n        @formatter args...\n      @console[severity] _args...\n\n  for name in ['log', 'info', 'warn', 'error']\n    @::[name] = template(name)\n \n  delegate = (name) ->\n    (args...) ->\n      @console[name] args...\n\n  for name in ['trace', 'time', 'timeEnd', 'assert', 'dir']\n    @::[name] = delegate(name)\n\nmodule.exports = (tag, options) ->\n  new CustomConsole(tag, options)\n"]}