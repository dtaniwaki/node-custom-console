{"version":3,"sources":["console.coffee"],"names":[],"mappings":"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","file":"console.js","sourceRoot":"/src","sourcesContent":["assert = require 'assert'\n\ndebugLevels =\n  log: 1\n  info: 2\n  warn: 3\n  error: 4\n\nclass CustomConsole\n  constructor: (tag, options) ->\n    assert tag, 'tag is required'\n\n    @console = options.console || require 'console'\n    @tag = tag\n\n  output: (severity, tag) ->\n    debug = process.env.NODE_DEBUG\n    if !tag || (debug && (debug == '*' || (new RegExp(\"\\\\b#{tag}\\\\b\")).test debug))\n      level = process.env.NODE_DEBUG_LEVEL\n      return !level || debugLevels[severity] >= debugLevels[level.toLowerCase()]\n    false\n\n  prefix: (severity, tag) ->\n    time = (new Date()).toISOString()\n    \"#{time} [#{severity}] #{process.pid} #{tag}:\"\n\n  postfix: (severity, tag) ->\n    ''\n\n  template = (name) ->\n    (args...) ->\n      _args = []\n\n      prefix = @prefix(name, @tag)\n      _args.push prefix if prefix\n\n      _args = _args.concat args\n\n      postfix = @postfix(name, @tag)\n      _args.push postfix if postfix\n\n      @console[name] _args... if @output(name, @tag)\n\n  for name in ['log', 'info', 'warn', 'error']\n    @::[name] = template(name)\n \n  delegate = (name) ->\n    (args...) ->\n      @console[name] args...\n\n  for name in ['trace', 'time', 'timeEnd', 'assert', 'dir']\n    @::[name] = delegate(name)\n\nmodule.exports = (tag, options) ->\n  new CustomConsole(tag, options)\n"]}